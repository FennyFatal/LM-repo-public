








void resolve(uint64_t kernbase) {
	M_TEMP = (void *)(kernbase + __M_TEMP);

#define r(name, offset) name = (void *)(kbase + offset)
	r(printf, __printf);
	r(k_malloc, __malloc);
	r(k_free, __free);
	r(k_memcpy, __memcpy);
	r(k_memset, __memset);
	r(k_memcmp, __memcmp);
	r(k_strlen, __strlen);
}


inline void write_jmp(uint64_t address, uint64_t destination) {
	// absolute jump
	*(uint8_t *)(address) = 0xFF;
	*(uint8_t *)(address + 1) = 0x25;
	*(uint8_t *)(address + 2) = 0x00;
	*(uint8_t *)(address + 3) = 0x00;
	*(uint8_t *)(address + 4) = 0x00;
	*(uint8_t *)(address + 5) = 0x00;
	*(uint64_t *)(address + 6) = destination;
}